% Sample Refs from Template
@article{DBLP:journals/cacm/Knuth74,
  author    = {Donald E. Knuth},
  title     = {{Computer Programming as an Art}},
  journal   = {Commun. {ACM}},
  volume    = {17},
  number    = {12},
  pages     = {667--673},
  year      = {1974},
  doi       = {10.1145/361604.361612},
  timestamp = {Tue, 07 Jun 2011 16:50:57 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/cacm/Knuth74},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{DBLP:journals/cacm/Dijkstra68a,
  author    = {Edsger W. Dijkstra},
  title     = {Letters to the editor: go to statement considered harmful},
  journal   = {Commun. {ACM}},
  volume    = {11},
  number    = {3},
  pages     = {147--148},
  year      = {1968},
  doi       = {10.1145/362929.362947},
  timestamp = {Thu, 09 Feb 2006 13:19:49 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/cacm/Dijkstra68a},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@book{DBLP:books/mk/GrayR93,
  author    = {Jim Gray and
               Andreas Reuter},
  title     = {Transaction Processing: Concepts and Techniques},
  publisher = {Morgan Kaufmann},
  year      = {1993},
  isbn      = {1-55860-190-2},
  timestamp = {Thu, 05 Nov 2015 19:53:28 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/books/mk/GrayR93},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}



@inproceedings{DBLP:conf/focs/HopcroftPV75,
  author    = {{John E.} Hopcroft and
               {Wolfgang J.} Paul and
               {Leslie G.} Valiant},
  title     = {On Time versus Space and Related Problems},
  booktitle = {16th Annual Symposium on Foundations of Computer Science, Berkeley,
               California, USA, October 13-15, 1975},
  pages     = {57--64},
  year      = {1975},
  crossref  = {DBLP:conf/focs/FOCS16},
  doi       = {10.1109/SFCS.1975.23},
  timestamp = {Tue, 16 Dec 2014 09:57:24 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/focs/HopcroftPV75},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@proceedings{DBLP:conf/focs/FOCS16,
  title     = {16th Annual Symposium on Foundations of Computer Science, Berkeley,
               California, USA, October 13-15, 1975},
  publisher = {{IEEE} Computer Society},
  year      = {1975},
  timestamp = {Mon, 15 Dec 2014 18:48:44 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/focs/FOCS16},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}





% Generated for Anoma Research Topics

% https://art.anoma.net


@article{ art-2024-compiling-zkvms,
    author    = { Centelles, Alberto },
    title     = { {Compiling to ZKVMs} },
    journal   = { Anoma Research Topics },
    month     = { Mar },
    year      = { 2024 },
    publisher = { Zenodo },
    version   = { March 26, 2024 },
    doi       = { 10.5281/zenodo.10498995 },
    url       = { https://doi.org/10.5281/zenodo.10498994 }
}


@article{ art-2024-intent-machines,
    author    = { Hart, Anthony and Reusche, D },
    title     = { {Intent Machines} },
    journal   = { Anoma Research Topics },
    month     = { Feb },
    year      = { 2024 },
    publisher = { Zenodo },
    version   = { February 21, 2024 },
    doi       = { 10.5281/zenodo.10654543 },
    url       = { https://doi.org/10.5281/zenodo.10498992 }
}


@article{ resource,
    author    = { Khalniyazova, Yulia and Goes, Christopher },
    title     = { {Anoma Resource Machine Specification} },
    journal   = { Anoma Research Topics },
    month     = { Jan },
    year      = { 2024 },
    publisher = { Zenodo },
    version   = { January 26, 2024 },
    doi       = { 10.5281/zenodo.10498991 },
    url       = { https://doi.org/10.5281/zenodo.10498990 }
}


@article{ art-2023-vampir-bestiary,
    author    = { Fitzgerald, Joshua and Centelles, Alberto },
    title     = { {VampIR Bestiary} },
    journal   = { Anoma Research Topics },
    month     = { Nov },
    year      = { 2023 },
    publisher = { Zenodo },
    version   = { November 13, 2023 },
    doi       = { 10.5281/zenodo.10118865 },
    url       = { https://doi.org/10.5281/zenodo.10118864 }
}


@article{ art-2023-constraint-satisfaction-problems-survey,
    author    = { Hart, Anthony },
    title     = { {Constraint Satisfaction Problems: A Survey for Anoma} },
    journal   = { Anoma Research Topics },
    month     = { Oct },
    year      = { 2023 },
    publisher = { Zenodo },
    version   = { October 18, 2023 },
    doi       = { 10.5281/zenodo.10019113 },
    url       = { https://doi.org/10.5281/zenodo.10019112 }
}


@article{ art-2023-exploring-cryptographic-approaches-enhance,
    author    = { Khalniyazova, Yulia },
    title     = { {Exploring Cryptographic Approaches to Enhance Privacy in Intent Solving} },
    journal   = { Anoma Research Topics },
    month     = { Oct },
    year      = { 2023 },
    publisher = { Zenodo },
    version   = { October 02, 2023 },
    doi       = { 10.5281/zenodo.8321167 },
    url       = { https://doi.org/10.5281/zenodo.8321166 }
}


@article{ art-2023-core-language-juvix,
    author    = { Lukasz Czajka },
    title     = { {The Core language of Juvix} },
    journal   = { Anoma Research Topics },
    month     = { Aug },
    year      = { 2023 },
    publisher = { Zenodo },
    version   = { August 29, 2023 },
    doi       = { 10.5281/zenodo.8268850 },
    url       = { https://doi.org/10.5281/zenodo.8268849 }
}


@article{ art-2023-rethinking-vampir,
    author    = { Anthony Hart },
    title     = { {Rethinking VampIR} },
    journal   = { Anoma Research Topics },
    month     = { Aug },
    year      = { 2023 },
    publisher = { Zenodo },
    version   = { August 29, 2023 },
    doi       = { 10.5281/zenodo.8262815 },
    url       = { https://doi.org/10.5281/zenodo.8262814 }
}


@article{ art-2023-anoma-unified-architecture,
    author    = { Christopher Goes and Awa Sun Yin and Adrian Brink },
    title     = { {Anoma: a unified architecture for full-stack decentralised applications} },
    journal   = { Anoma Research Topics },
    month     = { Aug },
    year      = { 2023 },
    publisher = { Zenodo },
    version   = { August 24, 2023 },
    doi       = { 10.5281/zenodo.8279842 },
    url       = { https://doi.org/10.5281/zenodo.8279841 }
}


@article{ art-2023-geb-pipeline,
    author    = { Artem Gureev and Jonathan Prieto-Cubides },
    title     = { {Geb Pipeline} },
    journal   = { Anoma Research Topics },
    month     = { Aug },
    year      = { 2023 },
    publisher = { Zenodo },
    version   = { August 21, 2023 },
    doi       = { 10.5281/zenodo.8262747 },
    url       = { https://doi.org/10.5281/zenodo.8262746 }
}


@article{ art-2023-juvix-vampir-pipeline,
    author    = { Lukasz Czajka },
    title     = { {Juvix to VampIR Pipeline} },
    journal   = { Anoma Research Topics },
    month     = { Aug },
    year      = { 2023 },
    publisher = { Zenodo },
    version   = { August 14, 2023 },
    doi       = { 10.5281/zenodo.8252903 },
    url       = { https://doi.org/10.5281/zenodo.8246535 }
}


% other people's research
@article{fabric,
 author = {Liu, Jed and Arden, Owen and George, Michael D. and Myers, Andrew C. and Murray, Toby and Sabelfeld, Andrei and Bauer, Lujo},
 title = {Fabric: Building open distributed systems securely by construction},
 year = {2017},
 issue_date = {2017},
 publisher = {IOS Press},
 address = {NLD},
 volume = {25},
 number = {4–5},
 issn = {0926-227X},
 url = {https://doi.org/10.3233/JCS-15805},
 doi = {10.3233/JCS-15805},
 abstract = {Distributed information systems are prevalent in modern computing but difficult to build securely. Because systems commonly span domains of trust, host nodes share data and code of varying degrees of trustworthiness. Modern systems are often open and extensible, making security even harder to reason about. Unfortunately, standard methods for software construction do not help programmers enough with ensuring their software is secure.Fabric is a system and language for building open, distributed, extensible information systems that are secure by construction. Fabric is a decentralized system that allows nodes to securely share both data and code despite mutual distrust. All resources are labeled with confidentiality and integrity policies that are enforced through a combination of compile-time and run-time mechanisms.The Fabric language offers a high-level but powerful model of computation. All resources appear as objects in the language, and the distribution and persistence of code and data are largely transparent to programmers. Fabric supports both data-shipping and query/RPC styles of computation: computation and information can both move between nodes. Optimistic, nested transactions ensure consistency across all objects and nodes. Fabric programs can securely share mobile code across trust domains, enabling more reuse and evolution of code and supporting new kinds of secure applications not possible in other distributed systems. Results from applications built using Fabric suggest that Fabric enforces strong security while offering a clean, concise, powerful programming model with good performance. An open-source prototype is available for download.},
 journal = {J. Comput. Secur.},
 month = {jan},
 pages = {367–426},
 numpages = {60},
 keywords = {persistent objects, transactions, distributed computing, information flow, Security}
}

@INPROCEEDINGS{dista,
  author={Wang, Dong and Gao, Yu and Dou, Wensheng and Wei, Jun},
  booktitle={2022 52nd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)}, 
  title={DisTA: Generic Dynamic Taint Tracking for Java-Based Distributed Systems}, 
  year={2022},
  volume={},
  number={},
  pages={547-558},
  keywords={Java;Instruments;Manuals;Debugging;Cluster computing;Benchmark testing;Security;taint tracking;data flow analysis;distributed systems},
  doi={10.1109/DSN53405.2022.00060}
}

@article{ibc,
 author={Christopher Goes},
 title={The Interblockchain Communication Protocol: An Overview},
 year={2020},
 url={https://github.com/cosmos/ibc/blob/8d9d3b6fe7309b034df8457760b3bbd11d24b8e1/archive/papers/2020-05/build/paper.pdf#L2}
}

@article{wrapped,
 author={AJ Scolaro},
 title={What is IBC?},
 year={2023},
 url={https://www.ux.xyz/blog/what-is-ibc/}
}

@article{Abraham2017,
  title={The Blockchain Consensus Layer and BFT},
  author={Ittai Abraham and Dahlia Malkhi},
  journal={Bull. EATCS},
  year={2017},
  volume={123},
  url={https://dahliamalkhi.wordpress.com/wp-content/uploads/2016/08/blockchainbft-beatcs2017.pdf}
}

@article{statemachine, author = {Schneider, Fred B.}, title = {Implementing fault-tolerant services using the state machine approach: a tutorial}, year = {1990}, issue_date = {Dec. 1990}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, volume = {22}, number = {4}, issn = {0360-0300}, url = {https://doi.org/10.1145/98163.98167}, doi = {10.1145/98163.98167}, abstract = {The state machine approach is a general method for implementing fault-tolerant services in distributed systems. This paper reviews the approach and describes protocols for two different failure models—Byzantine and fail stop. Systems reconfiguration techniques for removing faulty components and integrating repaired components are also discussed.}, journal = {ACM Comput. Surv.}, month = {dec}, pages = {299–319}, numpages = {21}
}
@InProceedings{smr,
  author =	{Antoniadis, Karolos and Guerraoui, Rachid and Malkhi, Dahlia and Seredinschi, Dragos-Adrian},
  title =	{{State Machine Replication Is More Expensive Than Consensus}},
  booktitle =	{32nd International Symposium on Distributed Computing (DISC 2018)},
  pages =	{7:1--7:18},
  series =	{Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =	{978-3-95977-092-7},
  ISSN =	{1868-8969},
  year =	{2018},
  volume =	{121},
  editor =	{Schmid, Ulrich and Widder, Josef},
  publisher =	{Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{https://drops-dev.dagstuhl.de/entities/document/10.4230/LIPIcs.DISC.2018.7},
  URN =		{urn:nbn:de:0030-drops-97961},
  doi =		{10.4230/LIPIcs.DISC.2018.7},
  annote =	{Keywords: Consensus, State machine replication, Synchronous model}
}
@article{serializability, author = {Papadimitriou, Christos H.}, title = {The serializability of concurrent database updates}, year = {1979}, issue_date = {Oct. 1979}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, volume = {26}, number = {4}, issn = {0004-5411}, url = {https://doi.org/10.1145/322154.322158}, doi = {10.1145/322154.322158}, journal = {J. ACM}, month = {oct}, pages = {631–653}, numpages = {23}
}

@inproceedings{causal, author = {Lloyd, Wyatt and Freedman, Michael J. and Kaminsky, Michael and Andersen, David G.}, title = {Don't settle for eventual: scalable causal consistency for wide-area storage with COPS}, year = {2011}, isbn = {9781450309776}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, url = {https://doi.org/10.1145/2043556.2043593}, doi = {10.1145/2043556.2043593}, abstract = {Geo-replicated, distributed data stores that support complex online applications, such as social networks, must provide an "always-on" experience where operations always complete with low latency. Today's systems often sacrifice strong consistency to achieve these goals, exposing inconsistencies to their clients and necessitating complex application logic. In this paper, we identify and define a consistency model---causal consistency with convergent conflict handling, or causal+---that is the strongest achieved under these constraints.We present the design and implementation of COPS, a key-value store that delivers this consistency model across the wide-area. A key contribution of COPS is its scalability, which can enforce causal dependencies between keys stored across an entire cluster, rather than a single server like previous systems. The central approach in COPS is tracking and explicitly checking whether causal dependencies between keys are satisfied in the local cluster before exposing writes. Further, in COPS-GT, we introduce get transactions in order to obtain a consistent view of multiple keys without locking or blocking. Our evaluation shows that COPS completes operations in less than a millisecond, provides throughput similar to previous systems when using one server per cluster, and scales well as we increase the number of servers in each cluster. It also shows that COPS-GT provides similar latency, throughput, and scaling to COPS for common workloads.}, booktitle = {Proceedings of the Twenty-Third ACM Symposium on Operating Systems Principles}, pages = {401–416}, numpages = {16}, keywords = {scalable wide-area replication, read transactions, key-value storage, causal + consistency, ALPS systems}, location = {Cascais, Portugal}, series = {SOSP '11} 
}
@InProceedings{nova,
author="Kothapalli, Abhiram
and Setty, Srinath
and Tzialla, Ioanna",
editor="Dodis, Yevgeniy
and Shrimpton, Thomas",
title="Nova: Recursive Zero-Knowledge Arguments from Folding Schemes",
booktitle="Advances in Cryptology -- CRYPTO 2022",
year="2022",
publisher="Springer Nature Switzerland",
address="Cham",
pages="359--388",
abstract="We introduce a new approach to realize incrementally verifiable computation (IVC), in which the prover recursively proves the correct execution of incremental computations of the form {\$}{\$}y=F^{\{}({\backslash}ell ){\}}(x){\$}{\$}y=F(ℓ)(x), where F is a (potentially non-deterministic) computation, x is the input, y is the output, and {\$}{\$}{\backslash}ell > 0{\$}{\$}ℓ>0. Unlike prior approaches to realize IVC, our approach avoids succinct non-interactive arguments of knowledge (SNARKs) entirely and arguments of knowledge in general. Instead, we introduce and employ folding schemes, a weaker, simpler, and more efficiently-realizable primitive, which reduces the task of checking two instances in some relation to the task of checking a single instance. We construct a folding scheme for a characterization of NP and show that it implies an IVC scheme with improved efficiency characteristics: (1) the ``recursion overhead'' (i.e., the number of steps that the prover proves in addition to proving the execution of F) is a constant and it is dominated by two group scalar multiplications expressed as a circuit (this is the smallest recursion overhead in the literature), and (2) the prover's work at each step is dominated by two multiexponentiations of size O(|F|), providing the fastest prover in the literature. The size of a proof is O(|F|) group elements, but we show that using a variant of an existing zkSNARK, the prover can prove the knowledge of a valid proof succinctly and in zero-knowledge with {\$}{\$}O({\backslash}log {\{}|F|{\}}){\$}{\$}O(log|F|)group elements. Finally, our approach neither requires a trusted setup nor FFTs, so it can be instantiated efficiently with any cycles of elliptic curves where DLOG is hard.",
isbn="978-3-031-15985-5"
}

@misc{onyx,
author = {{JP~Morgan}},
title = {{Onyx: Transforming the future of banking.}},
url = {https://www.jpmorgan.com/onyx/about},
year = {2024}
}


@misc{appsync,
author = {{Amazon}},
title = {{AWS AppSync}},
url = {https://aws.amazon.com/appsync/},
year = {2024}
}
@Article{ethereum,
  Title                    = {Ethereum White Paper: A Next Generation Smart Contract \& Decentralized Application Platform},
  Author                   = {Vitalik Buterin},
  Year                     = {2013},

  Owner                    = {dranov},
  Timestamp                = {2016.11.12},
  Url                      = {https://github.com/ethereum/wiki/wiki/White-Paper}
}

@article{Cecchetti2017,
  title={Nonmalleable Information Flow Control},
  author={Ethan Cecchetti and Andrew C. Myers and Owen Arden},
  journal={Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security},
  year={2017},
  url={https://doi.org/10.1145/3133956.3134054}
}



@article{constraints,
  title={Constraints},
  author={{PostgreSQL Global Development Group}},
  journal={PostgreSQL 16 Documentation},
  year={2024},
  url={https://www.postgresql.org/docs/current/ddl-constraints.html}
}


@InProceedings{merkle,
author="Merkle, Ralph C.",
editor="Pomerance, Carl",
title="A Digital Signature Based on a Conventional Encryption Function",
booktitle="Advances in Cryptology --- CRYPTO '87",
year="1988",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="369--378",
abstract="A new digital signature based only on a conventional encryption function (such as DES) is described which is as secure as the underlying encryption function -- the security does not depend on the difficulty of factoring and the high computational costs of modular arithmetic are avoided. The signature system can sign an unlimited number of messages, and the signature size increases logarithmically as a function of the number of messages signed. Signature size in a `typical' system might range from a few hundred bytes to a few kilobytes, and generation of a signature might require a few hundred to a few thousand computations of the underlying conventional encryption function.",
isbn="978-3-540-48184-3",
url={https://link.springer.com/chapter/10.1007/3-540-48184-2_32#citeas}
}

@misc{bitcoin,
  author = {Satoshi Nakamoto},
  title = {Bitcoin: A Peer-to-Peer Electronic Cash System},
  year = {2008},
  month = {Dec},
  note = {Accessed: 2024},
  url = {https://bitcoin.org/bitcoin.pdf},
}

@misc{utxo,
author={Khadija Khartit},
title={{UTXO Model: Definition, How It Works, and Goals}},
year={2022},
month={april},
day={15},
journal={Investopedia},
url={https://www.investopedia.com/terms/u/utxo.asp},
}